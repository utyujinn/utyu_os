" D:\prog\.vim\default.vim:
" Vim session script.
" Created by session.vim 2.13.1 on 29 12æœˆ 2022 at 15:17:36.
" Open this file in Vim and run :source % to restore your session.

if exists('g:syntax_on') != 1 | syntax on | endif
if exists('g:did_load_filetypes') != 1 | filetype on | endif
if exists('g:did_load_ftplugin') != 1 | filetype plugin on | endif
if exists('g:did_indent_on') != 1 | filetype indent on | endif
if &background != 'dark'
	set background=dark
endif
if !exists('g:colors_name') || g:colors_name != 'pablo' | colorscheme pablo | endif
call setqflist([])
let SessionLoad = 1
if &cp | set nocp | endif
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd D:\prog
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +3 env\env.bat
badd +1 env\boot.bat
badd +1 env\mk.bat
badd +5 src\00_boot_only\boot.s
badd +44 src\modules\real\memcpy.s
badd +44 src\modules\protect\memcpy.s
badd +56 src\modules\real\memcmp.s
badd +10 src\01_bpb\boot.s
badd +0 src\02_save_data\boot.s
argglobal
%argdel
edit src\02_save_data\
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
split
1wincmd k
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 41 + 27) / 55)
exe 'vert 1resize ' . ((&columns * 34 + 104) / 209)
exe '2resize ' . ((&lines * 41 + 27) / 55)
exe 'vert 2resize ' . ((&columns * 174 + 104) / 209)
exe '3resize ' . ((&lines * 11 + 27) / 55)
argglobal
balt src\00_boot_only\boot.s
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 12 - ((11 * winheight(0) + 20) / 41)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 12
normal! 0
lcd D:\prog
wincmd w
argglobal
if bufexists(fnamemodify("D:\prog\src\02_save_data\boot.s", ":p")) | buffer D:\prog\src\02_save_data\boot.s | else | edit D:\prog\src\02_save_data\boot.s | endif
balt D:\prog\src\01_bpb\boot.s
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=1
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 2 - ((1 * winheight(0) + 20) / 41)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 2
normal! 05|
wincmd w
argglobal
terminal ++curwin ++cols=209 ++rows=11 ++type=winpty 
let s:term_buf_9 = bufnr()
balt D:\prog\env\boot.bat
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 75 - ((0 * winheight(0) + 5) / 11)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 75
normal! 0
wincmd w
2wincmd w
exe '1resize ' . ((&lines * 41 + 27) / 55)
exe 'vert 1resize ' . ((&columns * 34 + 104) / 209)
exe '2resize ' . ((&lines * 41 + 27) / 55)
exe 'vert 2resize ' . ((&columns * 174 + 104) / 209)
exe '3resize ' . ((&lines * 11 + 27) / 55)
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0
"   silent exe 'bwipe ' . s:wipebuf
endif
" unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save

" Support for special windows like quick-fix and plug-in windows.
" Everything down here is generated by vim-session (not supported
" by :mksession out of the box).

1wincmd w
tabnext 1
let s:bufnr_save = bufnr("%")
let s:cwd_save = getcwd()
edit src\02_save_data\
if !getbufvar(s:bufnr_save, '&modified')
  let s:wipebuflines = getbufline(s:bufnr_save, 1, '$')
  if len(s:wipebuflines) <= 1 && empty(get(s:wipebuflines, 0, ''))
    silent execute 'bwipeout' s:bufnr_save
  endif
endif
execute "cd" fnameescape(s:cwd_save)
:1resize 41|vert :1resize 34|:2resize 41|vert :2resize 174|:3resize 11|vert :3resize 209|:1resize 41|vert :1resize 34|:2resize 41|vert :2resize 174|:3resize 11|vert :3resize 209|
2wincmd w
tabnext 1
if exists('s:wipebuf')
  if empty(bufname(s:wipebuf))
if !getbufvar(s:wipebuf, '&modified')
  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')
  if len(s:wipebuflines) <= 1 && empty(get(s:wipebuflines, 0, ''))
    silent execute 'bwipeout' s:wipebuf
  endif
endif
  endif
endif
doautoall SessionLoadPost
unlet SessionLoad
" vim: ft=vim ro nowrap smc=128
